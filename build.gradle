plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {url = "https://maven.gegy.dev"}
	maven {url = 'https://maven.blamejared.com/' }
	maven {url = "https://mvn.devos.one/releases/" }
	maven {url = "https://api.modrinth.com/maven" }
	maven {url = "https://maven.theillusivec4.top/"}
	maven {url = "https://maven.jamieswhiteshirt.com/libs-release"}
	maven {url = 'https://maven.ladysnake.org/releases'}
	maven {url = "https://maven.shedaniel.me/" }
	maven {url = "https://maven.terraformersmc.com/"}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// The API of LambDynamicLights.
	modCompileOnly("dev.lambdaurora.lambdynamiclights:lambdynamiclights-api:${project.lambdynlights_version}")


    // For testing
	modLocalRuntime("dev.emi:trinkets:${project.trinkets_version}")
	modLocalRuntime("dev.lambdaurora.lambdynamiclights:lambdynamiclights-runtime:${project.lambdynlights_version}")



	modApi "com.terraformersmc:modmenu:7.2.2"

	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	// For runtime of Lodestone
	modImplementation("team.lodestar.lodestone:lodestone:${project.minecraft_version}-${project.lodestone_version}-fabric")
	modImplementation("dev.emi:trinkets:${project.trinkets_version}")

	for (String module in port_lib_modules.split(",")) {
		modImplementation("io.github.fabricators_of_create.Porting-Lib:$module:$port_lib_version")
	}
	modImplementation("com.jamieswhiteshirt:reach-entity-attributes:${project.rea_version}")

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}